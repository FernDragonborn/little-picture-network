<?xml version="1.0"?>
<doc>
    <assembly>
        <name>test-project-Inforce-backend</name>
    </assembly>
    <members>
        <member name="M:test_project_Inforce_backend.Controllers.AlbumController.GetAllAlbumsOfUser(System.String)">
            <summary>
            Gets array of albums of user
            </summary>
            <param name="id">Guid of user in string.</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully founded.</response>
            <response code="404">Photo doesn't exist.</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.AlbumController.UpdateAlbum(test_project_Inforce_backend.Models.AlbumDto)">
            <summary>
            Updates album by Id.
            </summary>
            <param name="albumDto">The entity to update.</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully deleted photo.</response>
            <response code="401">The id of user in album and id of user does'nt match.</response>
            <response code="404">There could be mistakes in request or no such photo exists.</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.AlbumController.DeleteAnyalbum(test_project_Inforce_backend.Models.PhotoDto)">
            <summary>
            Deletes photo by Id
            </summary>
            <param name="photoDto">The entity to remove.</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully deleted photo.</response>
            <response code="400">There could be mistakes in request or no such photo exists.</response>>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.AlbumController.DeleteAlbum(test_project_Inforce_backend.Models.AlbumDto)">
            <summary>
            Deletes album by Id
            </summary>
            <param name="albumDto">The entity to remove.</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully deleted photo.</response>
            <response code="401">The id of user in album and id of user does'nt match.</response>
            <response code="404">There could be mistakes in request or no such photo exists.</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.AuthController.Register(test_project_Inforce_backend.Models.UserDto)">
            <summary>
            Register new user
            </summary>
            <param></param>
            <param name="userDto">user data transfer object. Neded fields for this method: login, password</param>
            <returns>HTTP responce.</returns>
            <response code="201">Succesfully regitered</response>
            <response code="400">User with this login already exists or Database exception</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.AuthController.LogIn(test_project_Inforce_backend.Models.UserDto)">
            <summary>
            Log in and get JWT token
            </summary>
            <param></param>
            <param name="userDto">user data transfer object. Neded fields for this method: login, password</param>
            <returns>HTTP responce and JWT token in it.</returns>
            <response code="200">Succesfully logged in</response>
            <response code="400">Wrong login or password</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.AuthController.RenewToken(test_project_Inforce_backend.Models.UserDto)">
            <summary>
            Method for testing if authoraization works
            </summary>
            <param></param>
            <param name="userDto">user data transfer object. Neded fields for this method: login, password</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully authorized</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.PhotoController.GetPhotoById(System.Guid)">
            <summary>
            Gets photoRequest data transfer object by id
            </summary>
            <param name="id"></param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully founded</response>
            <response code="404">Photo doesn't exist</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.PhotoController.GetAllPhotos">
            <summary>
            Gets all photos in photoRequest data transfer objects
            </summary>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully founded</response>
            <response code="400">Exception initializtion of object occured</response>
            <response code="404">Photo doesn't exist</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.PhotoController.AddPhoto(test_project_Inforce_backend.Models.PhotoDto)">
            <summary>
            Add new photoRequest.
            </summary>
            <param name="photoRequest">photoRequest data transfer object. Needed fields for this method: photoData, userId</param >
            <returns>HTTP responce.</returns>
            <response code="201">Succesfully added photoRequest.</response>
            <response code = "400">Image contained viruses, user isn't existing or database exception.</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.PhotoController.EditPhoto(test_project_Inforce_backend.Models.PhotoDto)">
            <summary>
            Edit an existing photoDto.
            </summary>
            <param name = "photoDto" ></param >
            <returns>HTTP responce.</returns >
            <response code="200">Succesfully edited photoDto.</response>
            <response code="400">Database exception.</response>
            <response code="404">Photo does not exist.</response>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.PhotoController.DeleteAnyPhotoById(test_project_Inforce_backend.Models.PhotoDto)">
            <summary>
            Deletes photoDto by Id
            </summary>
            <param name="photoDto">The entity to remove.</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully deleted photoDto.</response>
            <response code="400">There could be mistakes in request or no such photoDto exists.</response>>
        </member>
        <member name="M:test_project_Inforce_backend.Controllers.PhotoController.DeletePhotoById(test_project_Inforce_backend.Models.PhotoDto)">
            <summary>
            Deletes photoDto by Id
            </summary>
            <param name="photoDto">The entity to remove.</param>
            <returns>HTTP responce.</returns>
            <response code="200">Succesfully deleted photoDto.</response>
            <response code="400">There could be mistakes in request or no such photoDto exists.</response>
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.IncreasedLenghtOfPasswordHash">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.IncreasedLenghtOfPasswordHash.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.IncreasedLenghtOfPasswordHash.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.IncreasedLenghtOfPasswordHash.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.SetNullableForName">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.SetNullableForName.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.SetNullableForName.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.SetNullableForName.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.AddPhotosAndALbumsTables">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddPhotosAndALbumsTables.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddPhotosAndALbumsTables.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddPhotosAndALbumsTables.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.AddLikesTable">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddLikesTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddLikesTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddLikesTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.MovaedLikesToPhotoClass">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.MovaedLikesToPhotoClass.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.MovaedLikesToPhotoClass.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.MovaedLikesToPhotoClass.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.RemovedNotMappedFromPhotoAndPreviewData">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.RemovedNotMappedFromPhotoAndPreviewData.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.RemovedNotMappedFromPhotoAndPreviewData.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.RemovedNotMappedFromPhotoAndPreviewData.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.a">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.a.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.a.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.a.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.allowNullInTitleInAlbum">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.allowNullInTitleInAlbum.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.allowNullInTitleInAlbum.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.allowNullInTitleInAlbum.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.ForbiddenNullsInTitlesInAlbums">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.ForbiddenNullsInTitlesInAlbums.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.ForbiddenNullsInTitlesInAlbums.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.ForbiddenNullsInTitlesInAlbums.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:test_project_Inforce_backend.Migrations.AddedTimestamps">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddedTimestamps.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddedTimestamps.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:test_project_Inforce_backend.Migrations.AddedTimestamps.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:EFGuidCollection">
            <summary>
            Baseclass that allows persisting of scalar values as a collection (which is not supported by EF 4.3)
            </summary>
            <typeparam name="T">Type of the single collection entry that should be persisted.</typeparam>
        </member>
    </members>
</doc>
